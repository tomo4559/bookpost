import os
import requests
import markdown2
from dotenv import load_dotenv
from openai import OpenAI
from datetime import datetime

# -------------------------------
# 1. 環境変数読み込み
# -------------------------------
load_dotenv()
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
GOOGLE_BOOKS_API = os.getenv("GOOGLE_BOOKS_API")
WORDPRESS_URL = os.getenv("WORDPRESS_URL")
WORDPRESS_USER = os.getenv("WORDPRESS_USER")
WORDPRESS_APP_PASS = os.getenv("WORDPRESS_APP_PASS")

client = OpenAI(api_key=OPENAI_API_KEY)

# -------------------------------
# 2. 書籍取得
# -------------------------------
def get_new_books(query="ビジネス書", max_results=3):
    url = f"{GOOGLE_BOOKS_API}{query}&maxResults={max_results}&langRestrict=ja"
    res = requests.get(url)
    items = res.json().get("items", [])
    books = []
    for item in items:
        info = item.get("volumeInfo", {})
        books.append({
            "title": info.get("title", "不明"),
            "author": info.get("authors", ["不明"])[0],
            "description": info.get("description", "")
        })
    return books

# -------------------------------
# 3. レビュー取得（簡易版: Web検索orAPI）
# -------------------------------
def get_reviews(book_title):
    # 実運用ではBing Search APIなどで取得
    # ここではサンプル用に空文字列返却
    return "他のレビューから抽出した要点テキスト"

# -------------------------------
# 4. 要約＋学び＋考察生成
# -------------------------------
def generate_summary(book, reviews_text):
    prompt = f"""
あなたは日本語の書評ブロガーです。
以下の情報から著作権を侵害せず、「要約＋学び３つ＋考察」を作成してください。
- 書籍タイトル: {book['title']}
- 著者: {book['author']}
- 概要: {book['description']}
- 他のレビュー: {reviews_text}

出力はMarkdown形式で。
"""
    response = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7
    )
    return response.choices[0].message.content

# -------------------------------
# 5. WordPressに投稿
# -------------------------------
def post_to_wordpress(title, content, tags=["AI本要約"]):
    url = f"{WORDPRESS_URL}/wp-json/wp/v2/posts"
    data = {
        "title": title,
        "content": markdown2.markdown(content),
        "status": "draft",  # 下書きで投稿、確認後公開
        "tags": tags
    }
    r = requests.post(url, json=data, auth=(WORDPRESS_USER, WORDPRESS_APP_PASS))
    print(f"投稿結果: {r.status_code} / {r.text}")
    return r.json()

# -------------------------------
# 6. メイン処理
# -------------------------------
def main():
    books = get_new_books()
    for book in books:
        reviews = get_reviews(book['title'])
        content = generate_summary(book, reviews)
        post_to_wordpress(book['title'], content)

if __name__ == "__main__":
    main()
